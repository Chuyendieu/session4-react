export function randomId() {
    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>
        (
        c ^
        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))
        ).toString(16)
    );
}

export function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}

export function removeVietnameseAccent(str) {
    return str
        .normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "")
        .replace(/đ/g, "d")
        .replace(/Đ/g, "D");
}

export function convertToVND(number) {
    var vnd = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(number);
    return vnd;
  }
  
export function convertToUSD(number) {
    var usd = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(number);
    return usd;
}

export function getDateInfo(time) {
    var dateObj = new Date(time);
    var dateInfo = {
        year: dateObj.getFullYear(),
        month: Number(dateObj.getMonth()) + 1,
        day: dateObj.getDate(),
        hour: dateObj.getHours(),
        minute: dateObj.getMinutes(),
        second: dateObj.getSeconds(),
    };
    dateInfo.format = dateInfo.day + '/' + dateInfo.month + '/' + dateInfo.year + ' ' + dateInfo.hour + ':' + dateInfo.minute + ':' + dateInfo.second + 's';
    
    return dateInfo;
}

export function createBuyAnimation(element1, element2, width, height) {
    // Tạo một bản sao của phần tử đầu tiên
    var clone = element1.cloneNode(true);
  
    // Lấy thông tin về vị trí của phần tử thứ nhất
    var element1Rect = element1.getBoundingClientRect();
  
    // Đặt các thuộc tính CSS để phần tử sao chép di chuyển
    clone.style.position = 'absolute';
    clone.style.left = element1Rect.left + 'px';
    clone.style.top = element1Rect.top + 'px';
    clone.style.borderRadius = "50%";
    clone.style.maxWidth = width + "px";
    clone.style.maxheight = height + "px";
    clone.style.transform = "scale(1.5)";
    element2.style.transform = "scale(2)";
  
    // Thêm phần tử sao chép vào body hoặc phần tử cha của element1 nếu muốn
    document.body.appendChild(clone);
  
    // Tính toán vị trí đích của phần tử sao chép
    var destinationRect = element2.getBoundingClientRect();
    var destinationLeft = destinationRect.left;
    var destinationTop = destinationRect.top;
  
    // Tạo hiệu ứng di chuyển
    var duration = 1000; // Thời gian di chuyển (milliseconds)
    var startTime = null;
  
    function moveElement(timestamp) {
      if (!startTime) startTime = timestamp;
      var progress = timestamp - startTime;
      var percentage = Math.min(progress / duration, 1);
  
      // Tính toán vị trí hiện tại của phần tử sao chép
      var currentLeft = element1Rect.left + (destinationLeft - element1Rect.left) * percentage;
      var currentTop = element1Rect.top + (destinationTop - element1Rect.top) * percentage;
  
      // Cập nhật vị trí của phần tử sao chép
      clone.style.left = currentLeft + 'px';
      clone.style.top = currentTop + 'px';
  
      if (percentage < 1) {
        // Tiếp tục di chuyển cho đến khi đạt đến vị trí đích
        requestAnimationFrame(moveElement);
      } else {
        // Kết thúc di chuyển và loại bỏ phần tử sao chép
        clone.parentNode.removeChild(clone);
        element2.style.transform = "unset";
      }
    }
  
    // Bắt đầu di chuyển
    requestAnimationFrame(moveElement);
  }

export default {
    randomId,
    sleep,
    removeVietnameseAccent,
    convertToVND,
    convertToUSD,
    getDateInfo,
    createBuyAnimation
}